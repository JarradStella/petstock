-- 1a.i Along with how many unique [ClassCode] of “CPRE” Products they have Purchased
-- 1a.ii And how many total Units of [ClassCode] of “CPRE” Products they have Purchased

WITH table_1 AS (
    -- Join sales and product data
    SELECT *
    FROM 'Sale.csv' AS sale
    INNER JOIN 'Product.csv' AS product
        ON sale.ProductKey = product.ProductKey
    ORDER BY sale.OrderKey ASC
),

-- Rank each purchase per customer to find the initial sale
purchase_order_rank AS (
    SELECT 
        *,
        RANK() OVER (PARTITION BY CustomerKey ORDER BY ServerDateTime ASC) AS OrderRank
    FROM table_1
),

-- Identify customers with a 'CACC' item in their initial sale
cacc_customers AS (
    SELECT DISTINCT
        CustomerKey
    FROM purchase_order_rank
    WHERE OrderRank = 1 
        AND ClassCode = 'CACC'
    ORDER BY CustomerKey ASC
),

-- Filter sales for 'CACC' customers and join with product details
table_4 AS (
    SELECT *
    FROM 'Sale.csv' AS sale2
    INNER JOIN cacc_customers 
        ON sale2.CustomerKey = cacc_customers.CustomerKey
    INNER JOIN 'Product.csv' AS product
        ON sale2.ProductKey = product.ProductKey
),

-- Calculate total units purchased by top 10 'CACC' customers
top_10_customers AS (
    SELECT 
        table_4.CustomerKey,
        SUM(Quantity) AS total_units
    FROM table_4
    GROUP BY table_4.CustomerKey
    ORDER BY total_units DESC
    LIMIT 10
)

-- Select and count 'CPRE' products for top 10 customers
SELECT 
    top_10_customers.CustomerKey,
    top_10_customers.total_units,
    COUNT(DISTINCT table_4.ProductKey) AS count_unique_cpre_products,
    SUM(table_4.Quantity) AS total_cpre_units
FROM top_10_customers 
INNER JOIN table_4
    ON table_4.CustomerKey = top_10_customers.CustomerKey
WHERE table_4.ClassCode = 'CPRE'
GROUP BY top_10_customers.CustomerKey, top_10_customers.total_units
ORDER BY total_units DESC;
